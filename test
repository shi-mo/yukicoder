#!/bin/bash

set -u

if [ $# -lt 1 ]; then
    echo "usage: $0 0001.exe 0002.rb ..." >&2
    exit 1
fi

function main () {
    for TEST_TARGET in $*; do
        PROBLEM_ID=`echo ${TEST_TARGET} | sed "s/\.exe$//" | sed "s/\.rb$//"`

        if [ ! -e ${TEST_TARGET} ]; then
            echo "${TEST_TARGET} doesn't exist" 1>&2
            continue
        fi
        if [ ! -e ${PROBLEM_ID}/ ]; then
            echo "${PROBLEM_ID} NO testcase" 1>&2
            continue
        fi

        generate_testcases_for ${PROBLEM_ID}
        run_test_for ${TEST_TARGET} ${PROBLEM_ID}
    done
}

function generate_testcases_for () {
    PROBLEM_ID=$1

    (
        cd ${PROBLEM_ID}

        ls gen_*.rb >/dev/null 2>&1
        if [ 0 -eq $? ]; then
            for SCRIPT in gen_*.rb; do
                ruby ${SCRIPT}
            done
        fi

        ls *.erb >/dev/null 2>&1
        if [ 0 -eq $? ]; then
            for ERB in *.erb; do
                ERB_OUTPUT_FILE=_`echo ${ERB} | sed "s/\.erb$//"`
                erb ${ERB} > ${ERB_OUTPUT_FILE}
            done
        fi
    )
}

function run_test_for () {
    TEST_TARGET=$1
    PROBLEM_ID=$2

    RUNNER=./${TEST_TARGET}
    if [[ "${TEST_TARGET}" =~ \.rb$ ]]; then
        RUNNER="ruby ${TEST_TARGET}"
    fi
    echo -n "${TEST_TARGET} "
    for TEST_INPUT in ${PROBLEM_ID}/*.input; do
        run_testcase ${PROBLEM_ID} "${RUNNER}" ${TEST_INPUT}
    done
    echo ""
}

function run_testcase () {
    PROBLEM_ID=$1
    RUNNER="$2"
    TEST_INPUT=$3

    TEST_NAME=`echo ${TEST_INPUT} | sed "s/^${PROBLEM_ID}\///" | sed "s/\.input$//"`
    TEST_OUTPUT=${PROBLEM_ID}/${TEST_NAME}.output

    if [ -e ${TEST_OUTPUT} ]; then
        ${RUNNER} < ${TEST_INPUT} | diff -u ${TEST_OUTPUT} -
    else
        ${RUNNER} < ${TEST_INPUT} >/dev/null
    fi
    STATUS=$?
    if [ 0 -ne ${STATUS} ]; then
        echo "Test failed: ${TEST_NAME} (status ${STATUS})"
    else
        echo -n "."
    fi
}

main $*
